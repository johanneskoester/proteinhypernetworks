/* Copyright (c) 2010, Johannes Köster <johannes.koester@tu-dortmund.de>
 * All rights reserved.
 *
 * This software is open-source under the BSD license; see "license.txt"
 * for a description.
 */

/*
 * ProteinDomainEditor.java
 *
 * Created on 02.03.2010, 13:23:22
 */

package proteinhypernetworkeditor.interactions;

/**
 *
 * @author Johannes Köster <johannes.koester@tu-dortmund.de>
 */
public class ProteinDomainEditor extends javax.swing.JPanel {

    /** Creates new form ProteinDomainEditor */
    public ProteinDomainEditor() {
        initComponents();
    }

    public void setDomainDefined(boolean d) {
      defineDomain.setSelected(d);
    }

    public boolean getDomainDefined() {
      return defineDomain.isSelected();
    }

    public String getDomain() {
      return domain.getText();
    }

    public void setDomain(String domain) {
      this.domain.setText(domain);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    defineDomain = new javax.swing.JCheckBox();
    domain = new javax.swing.JTextField();

    setName("Form"); // NOI18N
    setOpaque(false);

    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(proteinhypernetworkeditor.ProteinHypernetworkEditorApp.class).getContext().getResourceMap(ProteinDomainEditor.class);
    defineDomain.setText(resourceMap.getString("defineDomain.text")); // NOI18N
    defineDomain.setName("defineDomain"); // NOI18N
    defineDomain.addChangeListener(new javax.swing.event.ChangeListener() {
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        defineDomainStateChanged(evt);
      }
    });

    domain.setText(resourceMap.getString("domain.text")); // NOI18N
    domain.setEnabled(false);
    domain.setName("domain"); // NOI18N

    org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .add(defineDomain)
        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      .add(domain, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
      .add(layout.createSequentialGroup()
        .add(defineDomain)
        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
        .add(domain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
    );
  }// </editor-fold>//GEN-END:initComponents

    private void defineDomainStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_defineDomainStateChanged
      domain.setEnabled(defineDomain.isSelected());
    }//GEN-LAST:event_defineDomainStateChanged


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox defineDomain;
  private javax.swing.JTextField domain;
  // End of variables declaration//GEN-END:variables

}
