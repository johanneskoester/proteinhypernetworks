/* Copyright (c) 2010, Johannes Köster <johannes.koester@tu-dortmund.de>
 * All rights reserved.
 *
 * This software is open-source under the BSD license; see "license.txt"
 * for a description.
 */

/*
 * InteractionEditorPanel.java
 *
 * Created on 14.03.2010, 10:37:07
 */
package proteinhypernetworkeditor.interactions;

import java.util.Iterator;
import javax.swing.JComboBox;
import proteinHypernetwork.interactions.Interaction;
import proteinHypernetwork.interactions.Interactor;
import proteinHypernetwork.proteins.Protein;
import proteinhypernetworkeditor.DumbMouseListener;

/**
 *
 * @author Johannes Köster <johannes.koester@tu-dortmund.de>
 */
public class InteractionEditorPanel extends javax.swing.JPanel {

  /** Creates new form InteractionEditorPanel */
  public InteractionEditorPanel() {
    initComponents();

    addMouseListener(new DumbMouseListener());
  }

  public void setValues(Interaction i) {
    Iterator<Interactor> interactors = i.iterator();
    Iterator<ProteinComboBox> comboBoxes = proteinComboBoxes();
    Iterator<ProteinDomainEditor> domainEditors = proteinDomainEditors();

    while (interactors.hasNext()) {
      Interactor j = interactors.next();
      JComboBox comboBox = comboBoxes.next();
      if (j != null) {

        Protein p = j.getProtein();

        if (p != null) {
          comboBox.setSelectedItem(j.getProtein());
          ProteinDomainEditor de = domainEditors.next();
          if (j.isDomainInteractor()) {
            de.setDomainDefined(true);
            de.setDomain(j.getDomain());
          }
        }
      }
    }
  }

  public Iterator<ProteinComboBox> proteinComboBoxes() {
    return new Iterator<ProteinComboBox>() {

      int count = 0;

      @Override
      public boolean hasNext() {
        return count < 2;
      }

      @Override
      public ProteinComboBox next() {
        if (count++ == 0) {
          return proteinComboBox1;
        }
        return proteinComboBox2;
      }

      @Override
      public void remove() {
        throw new UnsupportedOperationException("Not supported yet.");
      }
    };
  }

  public Iterator<ProteinDomainEditor> proteinDomainEditors() {
    return new Iterator<ProteinDomainEditor>() {

      int count = 0;

      @Override
      public boolean hasNext() {
        return count < 2;
      }

      @Override
      public ProteinDomainEditor next() {
        if (count++ == 0) {
          return proteinDomainEditor1;
        }
        return proteinDomainEditor2;
      }

      @Override
      public void remove() {
        throw new UnsupportedOperationException("Not supported yet.");
      }
    };
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    interactsWith = new javax.swing.JLabel();
    proteinDomainEditor1 = new proteinhypernetworkeditor.interactions.ProteinDomainEditor();
    proteinDomainEditor2 = new proteinhypernetworkeditor.interactions.ProteinDomainEditor();
    proteinComboBox1 = new proteinhypernetworkeditor.interactions.ProteinComboBox();
    proteinComboBox2 = new proteinhypernetworkeditor.interactions.ProteinComboBox();
    saveCancelPanel = new proteinhypernetworkeditor.SaveCancelPanel();

    setName("Form"); // NOI18N
    setLayout(new java.awt.GridBagLayout());

    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(proteinhypernetworkeditor.ProteinHypernetworkEditorApp.class).getContext().getResourceMap(InteractionEditorPanel.class);
    interactsWith.setText(resourceMap.getString("interactsWith.text")); // NOI18N
    interactsWith.setName("interactsWith"); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    add(interactsWith, gridBagConstraints);

    proteinDomainEditor1.setName("proteinDomainEditor1"); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    add(proteinDomainEditor1, gridBagConstraints);

    proteinDomainEditor2.setName("proteinDomainEditor2"); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    add(proteinDomainEditor2, gridBagConstraints);

    proteinComboBox1.setName("proteinComboBox1"); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    add(proteinComboBox1, gridBagConstraints);

    proteinComboBox2.setName("proteinComboBox2"); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    add(proteinComboBox2, gridBagConstraints);

    saveCancelPanel.setName("saveCancelPanel"); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    add(saveCancelPanel, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel interactsWith;
  private proteinhypernetworkeditor.interactions.ProteinComboBox proteinComboBox1;
  private proteinhypernetworkeditor.interactions.ProteinComboBox proteinComboBox2;
  proteinhypernetworkeditor.interactions.ProteinDomainEditor proteinDomainEditor1;
  proteinhypernetworkeditor.interactions.ProteinDomainEditor proteinDomainEditor2;
  proteinhypernetworkeditor.SaveCancelPanel saveCancelPanel;
  // End of variables declaration//GEN-END:variables
}
