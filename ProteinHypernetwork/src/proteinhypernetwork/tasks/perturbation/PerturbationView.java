/* Copyright (c) 2010, Johannes Köster <johannes.koester@tu-dortmund.de>
 * All rights reserved.
 *
 * This software is open-source under the BSD license; see "license.txt"
 * for a description.
 */

/*
 * PerturbationView.java
 *
 * Created on 30.03.2010, 13:17:07
 */
package proteinhypernetwork.tasks.perturbation;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import proteinHypernetwork.NetworkEntity;
import proteinhypernetwork.Controller;

/**
 *
 * @author Johannes Köster <johannes.koester@tu-dortmund.de>
 */
public class PerturbationView extends javax.swing.JPanel {

  /** Creates new form PerturbationView */
  public PerturbationView() {
    initComponents();
    perturbationButton.setPreferredSize(undoPerturbationButton.getPreferredSize());

    Controller.getInstance().addPropertyChangeListener(new PropertyChangeListener() {

      @Override
      public void propertyChange(PropertyChangeEvent evt) {
        entityListModel.setEntities(Controller.getInstance().getEntities());
        perturbationListModel.setEntities(Controller.getInstance().getPerturbedEntities());
      }
    });
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    entityListModel = new proteinhypernetwork.tasks.perturbation.PerturbationListModel();
    perturbationListModel = new proteinhypernetwork.tasks.perturbation.PerturbationListModel();
    jScrollPane1 = new javax.swing.JScrollPane();
    entityList = new javax.swing.JList();
    jScrollPane2 = new javax.swing.JScrollPane();
    perturbationList = new javax.swing.JList();
    perturbationButton = new javax.swing.JButton();
    undoPerturbationButton = new javax.swing.JButton();
    filterEntities = new javax.swing.JTextField();
    filterPerturbations = new javax.swing.JTextField();

    setName("Form"); // NOI18N
    setLayout(new java.awt.GridBagLayout());

    jScrollPane1.setName("jScrollPane1"); // NOI18N

    entityList.setModel(entityListModel);
    entityList.setName("entityList"); // NOI18N
    jScrollPane1.setViewportView(entityList);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 0.5;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
    add(jScrollPane1, gridBagConstraints);

    jScrollPane2.setName("jScrollPane2"); // NOI18N

    perturbationList.setModel(perturbationListModel);
    perturbationList.setName("perturbationList"); // NOI18N
    jScrollPane2.setViewportView(perturbationList);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 0.5;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
    add(jScrollPane2, gridBagConstraints);

    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(proteinhypernetwork.ProteinHypernetworkApp.class).getContext().getResourceMap(PerturbationView.class);
    perturbationButton.setText(resourceMap.getString("perturbationButton.text")); // NOI18N
    perturbationButton.setName("perturbationButton"); // NOI18N
    perturbationButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        perturbationButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    add(perturbationButton, gridBagConstraints);

    undoPerturbationButton.setText(resourceMap.getString("undoPerturbationButton.text")); // NOI18N
    undoPerturbationButton.setName("undoPerturbationButton"); // NOI18N
    undoPerturbationButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        undoPerturbationButtonActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    add(undoPerturbationButton, gridBagConstraints);

    filterEntities.setText(resourceMap.getString("filterEntities.text")); // NOI18N
    filterEntities.setName("filterEntities"); // NOI18N
    filterEntities.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        filterEntitiesActionPerformed(evt);
      }
    });
    filterEntities.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        filterEntitiesFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt) {
        filterEntitiesFocusLost(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 0.5;
    add(filterEntities, gridBagConstraints);

    filterPerturbations.setText(resourceMap.getString("filterPerturbations.text")); // NOI18N
    filterPerturbations.setName("filterPerturbations"); // NOI18N
    filterPerturbations.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        filterPerturbationsActionPerformed(evt);
      }
    });
    filterPerturbations.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusGained(java.awt.event.FocusEvent evt) {
        filterPerturbationsFocusGained(evt);
      }
      public void focusLost(java.awt.event.FocusEvent evt) {
        filterPerturbationsFocusLost(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 0.25;
    add(filterPerturbations, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

    private void perturbationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perturbationButtonActionPerformed

      for (int i : entityList.getSelectedIndices()) {
        NetworkEntity e = (NetworkEntity) entityListModel.getElementAt(i);
        Controller.getInstance().perturbation(e);
      }
      entityListModel.setEntities(Controller.getInstance().getEntities());
      perturbationListModel.setEntities(Controller.getInstance().getPerturbedEntities());
    }//GEN-LAST:event_perturbationButtonActionPerformed

    private void undoPerturbationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoPerturbationButtonActionPerformed
      for (int i : perturbationList.getSelectedIndices()) {
        NetworkEntity e = (NetworkEntity) perturbationListModel.getElementAt(i);
        Controller.getInstance().undoPerturbation(e);
      }
      entityListModel.setEntities(Controller.getInstance().getEntities());
      perturbationListModel.setEntities(Controller.getInstance().getPerturbedEntities());
      org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(proteinhypernetwork.ProteinHypernetworkApp.class).getContext().getResourceMap(PerturbationView.class);
      filterEntities.setText(resourceMap.getString("filterEntities.text"));
      filterPerturbations.setText(resourceMap.getString("filterPerturbations.text"));
    }//GEN-LAST:event_undoPerturbationButtonActionPerformed

    private void filterEntitiesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_filterEntitiesFocusLost
      if (!entityListModel.isFiltered()) {
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(proteinhypernetwork.ProteinHypernetworkApp.class).getContext().getResourceMap(PerturbationView.class);
        filterEntities.setText(resourceMap.getString("filterEntities.text"));
      }
    }//GEN-LAST:event_filterEntitiesFocusLost

    private void filterEntitiesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_filterEntitiesFocusGained
      org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(proteinhypernetwork.ProteinHypernetworkApp.class).getContext().getResourceMap(PerturbationView.class);
      if (filterEntities.getText().equals(resourceMap.getString("filterEntities.text"))) {
        filterEntities.setText("");
      }
    }//GEN-LAST:event_filterEntitiesFocusGained

    private void filterPerturbationsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_filterPerturbationsFocusGained
      org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(proteinhypernetwork.ProteinHypernetworkApp.class).getContext().getResourceMap(PerturbationView.class);
      if (filterPerturbations.getText().equals(resourceMap.getString("filterPerturbations.text"))) {
        filterPerturbations.setText("");
      }
    }//GEN-LAST:event_filterPerturbationsFocusGained

    private void filterPerturbationsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_filterPerturbationsFocusLost
      if (!perturbationListModel.isFiltered()) {
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(proteinhypernetwork.ProteinHypernetworkApp.class).getContext().getResourceMap(PerturbationView.class);
        filterPerturbations.setText(resourceMap.getString("filterPerturbations.text"));
      }
    }//GEN-LAST:event_filterPerturbationsFocusLost

    private void filterEntitiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterEntitiesActionPerformed
      org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(proteinhypernetwork.ProteinHypernetworkApp.class).getContext().getResourceMap(PerturbationView.class);
      if(!filterEntities.getText().equals(resourceMap.getString("filterEntities.text")))
        entityListModel.filter(filterEntities.getText());
    }//GEN-LAST:event_filterEntitiesActionPerformed

    private void filterPerturbationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterPerturbationsActionPerformed
      org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(proteinhypernetwork.ProteinHypernetworkApp.class).getContext().getResourceMap(PerturbationView.class);
      if(!filterPerturbations.getText().equals(resourceMap.getString("filterPerturbations.text")))
        perturbationListModel.filter(filterPerturbations.getText());
    }//GEN-LAST:event_filterPerturbationsActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JList entityList;
  private proteinhypernetwork.tasks.perturbation.PerturbationListModel entityListModel;
  private javax.swing.JTextField filterEntities;
  private javax.swing.JTextField filterPerturbations;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JButton perturbationButton;
  private javax.swing.JList perturbationList;
  private proteinhypernetwork.tasks.perturbation.PerturbationListModel perturbationListModel;
  private javax.swing.JButton undoPerturbationButton;
  // End of variables declaration//GEN-END:variables
}
